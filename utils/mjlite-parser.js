/* parser generated by jison 0.4.6 */
/*
  Returns a Parser object of the following structure:

  Parser: {
    yy: {}
  }

  Parser.prototype: {
    yy: {},
    trace: function(),
    symbols_: {associative list: name ==> number},
    terminals_: {associative list: number ==> name},
    productions_: [...],
    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),
    table: [...],
    defaultActions: {...},
    parseError: function(str, hash),
    parse: function(input),

    lexer: {
        EOF: 1,
        parseError: function(str, hash),
        setInput: function(input),
        input: function(),
        unput: function(str),
        more: function(),
        less: function(n),
        pastInput: function(),
        upcomingInput: function(),
        showPosition: function(),
        test_match: function(regex_match_array, rule_index),
        next: function(),
        lex: function(),
        begin: function(condition),
        popState: function(),
        _currentRules: function(),
        topState: function(),
        pushState: function(condition),

        options: {
            ranges: boolean           (optional: true ==> token location info will include a .range[] member)
            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)
            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)
        },

        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),
        rules: [...],
        conditions: {associative list: name ==> set},
    }
  }


  token location info (@$, _$, etc.): {
    first_line: n,
    last_line: n,
    first_column: n,
    last_column: n,
    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)
  }


  the parseError function receives a 'hash' object with these members for lexer and parser errors: {
    text:        (matched text)
    token:       (the produced terminal token, if any)
    line:        (yylineno)
  }
  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {
    loc:         (yylloc)
    expected:    (string describing the set of expected tokens)
    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)
  }
*/
var parser = (function(){
var parser = {trace: function trace() { },
yy: {},
symbols_: {"error":2,"expression":3,"ex":4,"EOF":5,"group":6,"^":7,"_":8,"atom":9,"{":10,"}":11,"func":12,"cdot":13,"pm":14,"div":15,"lvert":16,"rvert":17,"leq":18,"geq":19,"neq":20,"nleq":21,"ngeq":22,"blue":23,"orange":24,"pink":25,"red":26,"green":27,"gray":28,"purple":29,"dfrac":30,"ORD":31,"BIN":32,"REL":33,"OPEN":34,"CLOSE":35,"$accept":0,"$end":1},
terminals_: {2:"error",5:"EOF",7:"^",8:"_",10:"{",11:"}",13:"cdot",14:"pm",15:"div",16:"lvert",17:"rvert",18:"leq",19:"geq",20:"neq",21:"nleq",22:"ngeq",23:"blue",24:"orange",25:"pink",26:"red",27:"green",28:"gray",29:"purple",30:"dfrac",31:"ORD",32:"BIN",33:"REL",34:"OPEN",35:"CLOSE"},
productions_: [0,[3,2],[4,0],[4,2],[4,4],[4,4],[4,6],[4,6],[6,1],[6,3],[6,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,1],[12,2],[12,2],[12,2],[12,2],[12,2],[12,2],[12,2],[12,3],[9,1],[9,1],[9,1],[9,1],[9,1]],
performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {
/* this == yyval */

var $0 = $$.length - 1;
switch (yystate) {
case 1:return $$[$0-1];
break;
case 2:this.$ = [];
break;
case 3:this.$ = $$[$0-1].concat($$[$0]);
break;
case 4:this.$ = [{type: 'sup', value: {base: $$[$0-3], sup: $$[$0-1]}}].concat($$[$0]);
break;
case 5:this.$ = [{type: 'sub', value: {base: $$[$0-3], sub: $$[$0-1]}}].concat($$[$0]);
break;
case 6:this.$ = [{type: 'supsub', value: {base: $$[$0-5], sup: $$[$0-3], sub: $$[$0-1]}}].concat($$[$0]);
break;
case 7:this.$ = [{type: 'supsub', value: {base: $$[$0-5], sup: $$[$0-1], sub: $$[$0-3]}}].concat($$[$0]);
break;
case 8:this.$ = $$[$0];
break;
case 9:this.$ = $$[$0-1];
break;
case 10:this.$ = $$[$0];
break;
case 11:this.$ = [{type: 'bin', value: yytext}];
break;
case 12:this.$ = [{type: 'bin', value: yytext}];
break;
case 13:this.$ = [{type: 'bin', value: yytext}];
break;
case 14:this.$ = [{type: 'open', value: yytext}];
break;
case 15:this.$ = [{type: 'close', value: yytext}];
break;
case 16:this.$ = [{type: 'rel', value: yytext}];
break;
case 17:this.$ = [{type: 'rel', value: yytext}];
break;
case 18:this.$ = [{type: 'rel', value: yytext}];
break;
case 19:this.$ = [{type: 'rel', value: yytext}];
break;
case 20:this.$ = [{type: 'rel', value: yytext}];
break;
case 21:this.$ = [{type: 'color', value: {color: 'blue', value: $$[$0]}}];
break;
case 22:this.$ = [{type: 'color', value: {color: 'orange', value: $$[$0]}}];
break;
case 23:this.$ = [{type: 'color', value: {color: 'pink', value: $$[$0]}}];
break;
case 24:this.$ = [{type: 'color', value: {color: 'red', value: $$[$0]}}];
break;
case 25:this.$ = [{type: 'color', value: {color: 'green', value: $$[$0]}}];
break;
case 26:this.$ = [{type: 'color', value: {color: 'gray', value: $$[$0]}}];
break;
case 27:this.$ = [{type: 'color', value: {color: 'purple', value: $$[$0]}}];
break;
case 28:this.$ = [{type: 'dfrac', value: {numer: $$[$0-1], denom: $$[$0]}}];
break;
case 29:this.$ = [{type: 'ord', value: yytext}];
break;
case 30:this.$ = [{type: 'bin', value: yytext}];
break;
case 31:this.$ = [{type: 'rel', value: yytext}];
break;
case 32:this.$ = [{type: 'open', value: yytext}];
break;
case 33:this.$ = [{type: 'close', value: yytext}];
break;
}
},
table: [{3:1,4:2,5:[2,2],6:3,9:4,10:[1,5],12:6,13:[1,12],14:[1,13],15:[1,14],16:[1,15],17:[1,16],18:[1,17],19:[1,18],20:[1,19],21:[1,20],22:[1,21],23:[1,22],24:[1,23],25:[1,24],26:[1,25],27:[1,26],28:[1,27],29:[1,28],30:[1,29],31:[1,7],32:[1,8],33:[1,9],34:[1,10],35:[1,11]},{1:[3]},{5:[1,30]},{4:31,5:[2,2],6:3,7:[1,32],8:[1,33],9:4,10:[1,5],11:[2,2],12:6,13:[1,12],14:[1,13],15:[1,14],16:[1,15],17:[1,16],18:[1,17],19:[1,18],20:[1,19],21:[1,20],22:[1,21],23:[1,22],24:[1,23],25:[1,24],26:[1,25],27:[1,26],28:[1,27],29:[1,28],30:[1,29],31:[1,7],32:[1,8],33:[1,9],34:[1,10],35:[1,11]},{5:[2,8],7:[2,8],8:[2,8],10:[2,8],11:[2,8],13:[2,8],14:[2,8],15:[2,8],16:[2,8],17:[2,8],18:[2,8],19:[2,8],20:[2,8],21:[2,8],22:[2,8],23:[2,8],24:[2,8],25:[2,8],26:[2,8],27:[2,8],28:[2,8],29:[2,8],30:[2,8],31:[2,8],32:[2,8],33:[2,8],34:[2,8],35:[2,8]},{4:34,6:3,9:4,10:[1,5],11:[2,2],12:6,13:[1,12],14:[1,13],15:[1,14],16:[1,15],17:[1,16],18:[1,17],19:[1,18],20:[1,19],21:[1,20],22:[1,21],23:[1,22],24:[1,23],25:[1,24],26:[1,25],27:[1,26],28:[1,27],29:[1,28],30:[1,29],31:[1,7],32:[1,8],33:[1,9],34:[1,10],35:[1,11]},{5:[2,10],7:[2,10],8:[2,10],10:[2,10],11:[2,10],13:[2,10],14:[2,10],15:[2,10],16:[2,10],17:[2,10],18:[2,10],19:[2,10],20:[2,10],21:[2,10],22:[2,10],23:[2,10],24:[2,10],25:[2,10],26:[2,10],27:[2,10],28:[2,10],29:[2,10],30:[2,10],31:[2,10],32:[2,10],33:[2,10],34:[2,10],35:[2,10]},{5:[2,29],7:[2,29],8:[2,29],10:[2,29],11:[2,29],13:[2,29],14:[2,29],15:[2,29],16:[2,29],17:[2,29],18:[2,29],19:[2,29],20:[2,29],21:[2,29],22:[2,29],23:[2,29],24:[2,29],25:[2,29],26:[2,29],27:[2,29],28:[2,29],29:[2,29],30:[2,29],31:[2,29],32:[2,29],33:[2,29],34:[2,29],35:[2,29]},{5:[2,30],7:[2,30],8:[2,30],10:[2,30],11:[2,30],13:[2,30],14:[2,30],15:[2,30],16:[2,30],17:[2,30],18:[2,30],19:[2,30],20:[2,30],21:[2,30],22:[2,30],23:[2,30],24:[2,30],25:[2,30],26:[2,30],27:[2,30],28:[2,30],29:[2,30],30:[2,30],31:[2,30],32:[2,30],33:[2,30],34:[2,30],35:[2,30]},{5:[2,31],7:[2,31],8:[2,31],10:[2,31],11:[2,31],13:[2,31],14:[2,31],15:[2,31],16:[2,31],17:[2,31],18:[2,31],19:[2,31],20:[2,31],21:[2,31],22:[2,31],23:[2,31],24:[2,31],25:[2,31],26:[2,31],27:[2,31],28:[2,31],29:[2,31],30:[2,31],31:[2,31],32:[2,31],33:[2,31],34:[2,31],35:[2,31]},{5:[2,32],7:[2,32],8:[2,32],10:[2,32],11:[2,32],13:[2,32],14:[2,32],15:[2,32],16:[2,32],17:[2,32],18:[2,32],19:[2,32],20:[2,32],21:[2,32],22:[2,32],23:[2,32],24:[2,32],25:[2,32],26:[2,32],27:[2,32],28:[2,32],29:[2,32],30:[2,32],31:[2,32],32:[2,32],33:[2,32],34:[2,32],35:[2,32]},{5:[2,33],7:[2,33],8:[2,33],10:[2,33],11:[2,33],13:[2,33],14:[2,33],15:[2,33],16:[2,33],17:[2,33],18:[2,33],19:[2,33],20:[2,33],21:[2,33],22:[2,33],23:[2,33],24:[2,33],25:[2,33],26:[2,33],27:[2,33],28:[2,33],29:[2,33],30:[2,33],31:[2,33],32:[2,33],33:[2,33],34:[2,33],35:[2,33]},{5:[2,11],7:[2,11],8:[2,11],10:[2,11],11:[2,11],13:[2,11],14:[2,11],15:[2,11],16:[2,11],17:[2,11],18:[2,11],19:[2,11],20:[2,11],21:[2,11],22:[2,11],23:[2,11],24:[2,11],25:[2,11],26:[2,11],27:[2,11],28:[2,11],29:[2,11],30:[2,11],31:[2,11],32:[2,11],33:[2,11],34:[2,11],35:[2,11]},{5:[2,12],7:[2,12],8:[2,12],10:[2,12],11:[2,12],13:[2,12],14:[2,12],15:[2,12],16:[2,12],17:[2,12],18:[2,12],19:[2,12],20:[2,12],21:[2,12],22:[2,12],23:[2,12],24:[2,12],25:[2,12],26:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],31:[2,12],32:[2,12],33:[2,12],34:[2,12],35:[2,12]},{5:[2,13],7:[2,13],8:[2,13],10:[2,13],11:[2,13],13:[2,13],14:[2,13],15:[2,13],16:[2,13],17:[2,13],18:[2,13],19:[2,13],20:[2,13],21:[2,13],22:[2,13],23:[2,13],24:[2,13],25:[2,13],26:[2,13],27:[2,13],28:[2,13],29:[2,13],30:[2,13],31:[2,13],32:[2,13],33:[2,13],34:[2,13],35:[2,13]},{5:[2,14],7:[2,14],8:[2,14],10:[2,14],11:[2,14],13:[2,14],14:[2,14],15:[2,14],16:[2,14],17:[2,14],18:[2,14],19:[2,14],20:[2,14],21:[2,14],22:[2,14],23:[2,14],24:[2,14],25:[2,14],26:[2,14],27:[2,14],28:[2,14],29:[2,14],30:[2,14],31:[2,14],32:[2,14],33:[2,14],34:[2,14],35:[2,14]},{5:[2,15],7:[2,15],8:[2,15],10:[2,15],11:[2,15],13:[2,15],14:[2,15],15:[2,15],16:[2,15],17:[2,15],18:[2,15],19:[2,15],20:[2,15],21:[2,15],22:[2,15],23:[2,15],24:[2,15],25:[2,15],26:[2,15],27:[2,15],28:[2,15],29:[2,15],30:[2,15],31:[2,15],32:[2,15],33:[2,15],34:[2,15],35:[2,15]},{5:[2,16],7:[2,16],8:[2,16],10:[2,16],11:[2,16],13:[2,16],14:[2,16],15:[2,16],16:[2,16],17:[2,16],18:[2,16],19:[2,16],20:[2,16],21:[2,16],22:[2,16],23:[2,16],24:[2,16],25:[2,16],26:[2,16],27:[2,16],28:[2,16],29:[2,16],30:[2,16],31:[2,16],32:[2,16],33:[2,16],34:[2,16],35:[2,16]},{5:[2,17],7:[2,17],8:[2,17],10:[2,17],11:[2,17],13:[2,17],14:[2,17],15:[2,17],16:[2,17],17:[2,17],18:[2,17],19:[2,17],20:[2,17],21:[2,17],22:[2,17],23:[2,17],24:[2,17],25:[2,17],26:[2,17],27:[2,17],28:[2,17],29:[2,17],30:[2,17],31:[2,17],32:[2,17],33:[2,17],34:[2,17],35:[2,17]},{5:[2,18],7:[2,18],8:[2,18],10:[2,18],11:[2,18],13:[2,18],14:[2,18],15:[2,18],16:[2,18],17:[2,18],18:[2,18],19:[2,18],20:[2,18],21:[2,18],22:[2,18],23:[2,18],24:[2,18],25:[2,18],26:[2,18],27:[2,18],28:[2,18],29:[2,18],30:[2,18],31:[2,18],32:[2,18],33:[2,18],34:[2,18],35:[2,18]},{5:[2,19],7:[2,19],8:[2,19],10:[2,19],11:[2,19],13:[2,19],14:[2,19],15:[2,19],16:[2,19],17:[2,19],18:[2,19],19:[2,19],20:[2,19],21:[2,19],22:[2,19],23:[2,19],24:[2,19],25:[2,19],26:[2,19],27:[2,19],28:[2,19],29:[2,19],30:[2,19],31:[2,19],32:[2,19],33:[2,19],34:[2,19],35:[2,19]},{5:[2,20],7:[2,20],8:[2,20],10:[2,20],11:[2,20],13:[2,20],14:[2,20],15:[2,20],16:[2,20],17:[2,20],18:[2,20],19:[2,20],20:[2,20],21:[2,20],22:[2,20],23:[2,20],24:[2,20],25:[2,20],26:[2,20],27:[2,20],28:[2,20],29:[2,20],30:[2,20],31:[2,20],32:[2,20],33:[2,20],34:[2,20],35:[2,20]},{6:35,9:4,10:[1,5],12:6,13:[1,12],14:[1,13],15:[1,14],16:[1,15],17:[1,16],18:[1,17],19:[1,18],20:[1,19],21:[1,20],22:[1,21],23:[1,22],24:[1,23],25:[1,24],26:[1,25],27:[1,26],28:[1,27],29:[1,28],30:[1,29],31:[1,7],32:[1,8],33:[1,9],34:[1,10],35:[1,11]},{6:36,9:4,10:[1,5],12:6,13:[1,12],14:[1,13],15:[1,14],16:[1,15],17:[1,16],18:[1,17],19:[1,18],20:[1,19],21:[1,20],22:[1,21],23:[1,22],24:[1,23],25:[1,24],26:[1,25],27:[1,26],28:[1,27],29:[1,28],30:[1,29],31:[1,7],32:[1,8],33:[1,9],34:[1,10],35:[1,11]},{6:37,9:4,10:[1,5],12:6,13:[1,12],14:[1,13],15:[1,14],16:[1,15],17:[1,16],18:[1,17],19:[1,18],20:[1,19],21:[1,20],22:[1,21],23:[1,22],24:[1,23],25:[1,24],26:[1,25],27:[1,26],28:[1,27],29:[1,28],30:[1,29],31:[1,7],32:[1,8],33:[1,9],34:[1,10],35:[1,11]},{6:38,9:4,10:[1,5],12:6,13:[1,12],14:[1,13],15:[1,14],16:[1,15],17:[1,16],18:[1,17],19:[1,18],20:[1,19],21:[1,20],22:[1,21],23:[1,22],24:[1,23],25:[1,24],26:[1,25],27:[1,26],28:[1,27],29:[1,28],30:[1,29],31:[1,7],32:[1,8],33:[1,9],34:[1,10],35:[1,11]},{6:39,9:4,10:[1,5],12:6,13:[1,12],14:[1,13],15:[1,14],16:[1,15],17:[1,16],18:[1,17],19:[1,18],20:[1,19],21:[1,20],22:[1,21],23:[1,22],24:[1,23],25:[1,24],26:[1,25],27:[1,26],28:[1,27],29:[1,28],30:[1,29],31:[1,7],32:[1,8],33:[1,9],34:[1,10],35:[1,11]},{6:40,9:4,10:[1,5],12:6,13:[1,12],14:[1,13],15:[1,14],16:[1,15],17:[1,16],18:[1,17],19:[1,18],20:[1,19],21:[1,20],22:[1,21],23:[1,22],24:[1,23],25:[1,24],26:[1,25],27:[1,26],28:[1,27],29:[1,28],30:[1,29],31:[1,7],32:[1,8],33:[1,9],34:[1,10],35:[1,11]},{6:41,9:4,10:[1,5],12:6,13:[1,12],14:[1,13],15:[1,14],16:[1,15],17:[1,16],18:[1,17],19:[1,18],20:[1,19],21:[1,20],22:[1,21],23:[1,22],24:[1,23],25:[1,24],26:[1,25],27:[1,26],28:[1,27],29:[1,28],30:[1,29],31:[1,7],32:[1,8],33:[1,9],34:[1,10],35:[1,11]},{6:42,9:4,10:[1,5],12:6,13:[1,12],14:[1,13],15:[1,14],16:[1,15],17:[1,16],18:[1,17],19:[1,18],20:[1,19],21:[1,20],22:[1,21],23:[1,22],24:[1,23],25:[1,24],26:[1,25],27:[1,26],28:[1,27],29:[1,28],30:[1,29],31:[1,7],32:[1,8],33:[1,9],34:[1,10],35:[1,11]},{1:[2,1]},{5:[2,3],11:[2,3]},{6:43,9:4,10:[1,5],12:6,13:[1,12],14:[1,13],15:[1,14],16:[1,15],17:[1,16],18:[1,17],19:[1,18],20:[1,19],21:[1,20],22:[1,21],23:[1,22],24:[1,23],25:[1,24],26:[1,25],27:[1,26],28:[1,27],29:[1,28],30:[1,29],31:[1,7],32:[1,8],33:[1,9],34:[1,10],35:[1,11]},{6:44,9:4,10:[1,5],12:6,13:[1,12],14:[1,13],15:[1,14],16:[1,15],17:[1,16],18:[1,17],19:[1,18],20:[1,19],21:[1,20],22:[1,21],23:[1,22],24:[1,23],25:[1,24],26:[1,25],27:[1,26],28:[1,27],29:[1,28],30:[1,29],31:[1,7],32:[1,8],33:[1,9],34:[1,10],35:[1,11]},{11:[1,45]},{5:[2,21],7:[2,21],8:[2,21],10:[2,21],11:[2,21],13:[2,21],14:[2,21],15:[2,21],16:[2,21],17:[2,21],18:[2,21],19:[2,21],20:[2,21],21:[2,21],22:[2,21],23:[2,21],24:[2,21],25:[2,21],26:[2,21],27:[2,21],28:[2,21],29:[2,21],30:[2,21],31:[2,21],32:[2,21],33:[2,21],34:[2,21],35:[2,21]},{5:[2,22],7:[2,22],8:[2,22],10:[2,22],11:[2,22],13:[2,22],14:[2,22],15:[2,22],16:[2,22],17:[2,22],18:[2,22],19:[2,22],20:[2,22],21:[2,22],22:[2,22],23:[2,22],24:[2,22],25:[2,22],26:[2,22],27:[2,22],28:[2,22],29:[2,22],30:[2,22],31:[2,22],32:[2,22],33:[2,22],34:[2,22],35:[2,22]},{5:[2,23],7:[2,23],8:[2,23],10:[2,23],11:[2,23],13:[2,23],14:[2,23],15:[2,23],16:[2,23],17:[2,23],18:[2,23],19:[2,23],20:[2,23],21:[2,23],22:[2,23],23:[2,23],24:[2,23],25:[2,23],26:[2,23],27:[2,23],28:[2,23],29:[2,23],30:[2,23],31:[2,23],32:[2,23],33:[2,23],34:[2,23],35:[2,23]},{5:[2,24],7:[2,24],8:[2,24],10:[2,24],11:[2,24],13:[2,24],14:[2,24],15:[2,24],16:[2,24],17:[2,24],18:[2,24],19:[2,24],20:[2,24],21:[2,24],22:[2,24],23:[2,24],24:[2,24],25:[2,24],26:[2,24],27:[2,24],28:[2,24],29:[2,24],30:[2,24],31:[2,24],32:[2,24],33:[2,24],34:[2,24],35:[2,24]},{5:[2,25],7:[2,25],8:[2,25],10:[2,25],11:[2,25],13:[2,25],14:[2,25],15:[2,25],16:[2,25],17:[2,25],18:[2,25],19:[2,25],20:[2,25],21:[2,25],22:[2,25],23:[2,25],24:[2,25],25:[2,25],26:[2,25],27:[2,25],28:[2,25],29:[2,25],30:[2,25],31:[2,25],32:[2,25],33:[2,25],34:[2,25],35:[2,25]},{5:[2,26],7:[2,26],8:[2,26],10:[2,26],11:[2,26],13:[2,26],14:[2,26],15:[2,26],16:[2,26],17:[2,26],18:[2,26],19:[2,26],20:[2,26],21:[2,26],22:[2,26],23:[2,26],24:[2,26],25:[2,26],26:[2,26],27:[2,26],28:[2,26],29:[2,26],30:[2,26],31:[2,26],32:[2,26],33:[2,26],34:[2,26],35:[2,26]},{5:[2,27],7:[2,27],8:[2,27],10:[2,27],11:[2,27],13:[2,27],14:[2,27],15:[2,27],16:[2,27],17:[2,27],18:[2,27],19:[2,27],20:[2,27],21:[2,27],22:[2,27],23:[2,27],24:[2,27],25:[2,27],26:[2,27],27:[2,27],28:[2,27],29:[2,27],30:[2,27],31:[2,27],32:[2,27],33:[2,27],34:[2,27],35:[2,27]},{6:46,9:4,10:[1,5],12:6,13:[1,12],14:[1,13],15:[1,14],16:[1,15],17:[1,16],18:[1,17],19:[1,18],20:[1,19],21:[1,20],22:[1,21],23:[1,22],24:[1,23],25:[1,24],26:[1,25],27:[1,26],28:[1,27],29:[1,28],30:[1,29],31:[1,7],32:[1,8],33:[1,9],34:[1,10],35:[1,11]},{4:47,5:[2,2],6:3,8:[1,48],9:4,10:[1,5],11:[2,2],12:6,13:[1,12],14:[1,13],15:[1,14],16:[1,15],17:[1,16],18:[1,17],19:[1,18],20:[1,19],21:[1,20],22:[1,21],23:[1,22],24:[1,23],25:[1,24],26:[1,25],27:[1,26],28:[1,27],29:[1,28],30:[1,29],31:[1,7],32:[1,8],33:[1,9],34:[1,10],35:[1,11]},{4:49,5:[2,2],6:3,7:[1,50],9:4,10:[1,5],11:[2,2],12:6,13:[1,12],14:[1,13],15:[1,14],16:[1,15],17:[1,16],18:[1,17],19:[1,18],20:[1,19],21:[1,20],22:[1,21],23:[1,22],24:[1,23],25:[1,24],26:[1,25],27:[1,26],28:[1,27],29:[1,28],30:[1,29],31:[1,7],32:[1,8],33:[1,9],34:[1,10],35:[1,11]},{5:[2,9],7:[2,9],8:[2,9],10:[2,9],11:[2,9],13:[2,9],14:[2,9],15:[2,9],16:[2,9],17:[2,9],18:[2,9],19:[2,9],20:[2,9],21:[2,9],22:[2,9],23:[2,9],24:[2,9],25:[2,9],26:[2,9],27:[2,9],28:[2,9],29:[2,9],30:[2,9],31:[2,9],32:[2,9],33:[2,9],34:[2,9],35:[2,9]},{5:[2,28],7:[2,28],8:[2,28],10:[2,28],11:[2,28],13:[2,28],14:[2,28],15:[2,28],16:[2,28],17:[2,28],18:[2,28],19:[2,28],20:[2,28],21:[2,28],22:[2,28],23:[2,28],24:[2,28],25:[2,28],26:[2,28],27:[2,28],28:[2,28],29:[2,28],30:[2,28],31:[2,28],32:[2,28],33:[2,28],34:[2,28],35:[2,28]},{5:[2,4],11:[2,4]},{6:51,9:4,10:[1,5],12:6,13:[1,12],14:[1,13],15:[1,14],16:[1,15],17:[1,16],18:[1,17],19:[1,18],20:[1,19],21:[1,20],22:[1,21],23:[1,22],24:[1,23],25:[1,24],26:[1,25],27:[1,26],28:[1,27],29:[1,28],30:[1,29],31:[1,7],32:[1,8],33:[1,9],34:[1,10],35:[1,11]},{5:[2,5],11:[2,5]},{6:52,9:4,10:[1,5],12:6,13:[1,12],14:[1,13],15:[1,14],16:[1,15],17:[1,16],18:[1,17],19:[1,18],20:[1,19],21:[1,20],22:[1,21],23:[1,22],24:[1,23],25:[1,24],26:[1,25],27:[1,26],28:[1,27],29:[1,28],30:[1,29],31:[1,7],32:[1,8],33:[1,9],34:[1,10],35:[1,11]},{4:53,5:[2,2],6:3,9:4,10:[1,5],11:[2,2],12:6,13:[1,12],14:[1,13],15:[1,14],16:[1,15],17:[1,16],18:[1,17],19:[1,18],20:[1,19],21:[1,20],22:[1,21],23:[1,22],24:[1,23],25:[1,24],26:[1,25],27:[1,26],28:[1,27],29:[1,28],30:[1,29],31:[1,7],32:[1,8],33:[1,9],34:[1,10],35:[1,11]},{4:54,5:[2,2],6:3,9:4,10:[1,5],11:[2,2],12:6,13:[1,12],14:[1,13],15:[1,14],16:[1,15],17:[1,16],18:[1,17],19:[1,18],20:[1,19],21:[1,20],22:[1,21],23:[1,22],24:[1,23],25:[1,24],26:[1,25],27:[1,26],28:[1,27],29:[1,28],30:[1,29],31:[1,7],32:[1,8],33:[1,9],34:[1,10],35:[1,11]},{5:[2,6],11:[2,6]},{5:[2,7],11:[2,7]}],
defaultActions: {30:[2,1]},
parseError: function parseError(str, hash) {
    if (hash.recoverable) {
        this.trace(str);
    } else {
        throw new Error(str);
    }
},
parse: function parse(input) {
    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;
    this.lexer.setInput(input);
    this.lexer.yy = this.yy;
    this.yy.lexer = this.lexer;
    this.yy.parser = this;
    if (typeof this.lexer.yylloc == 'undefined') {
        this.lexer.yylloc = {};
    }
    var yyloc = this.lexer.yylloc;
    lstack.push(yyloc);
    var ranges = this.lexer.options && this.lexer.options.ranges;
    if (typeof this.yy.parseError === 'function') {
        this.parseError = this.yy.parseError;
    } else {
        this.parseError = Object.getPrototypeOf(this).parseError;
    }
    function popStack(n) {
        stack.length = stack.length - 2 * n;
        vstack.length = vstack.length - n;
        lstack.length = lstack.length - n;
    }
    function lex() {
        var token;
        token = self.lexer.lex() || EOF;
        if (typeof token !== 'number') {
            token = self.symbols_[token] || token;
        }
        return token;
    }
    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;
    while (true) {
        state = stack[stack.length - 1];
        if (this.defaultActions[state]) {
            action = this.defaultActions[state];
        } else {
            if (symbol === null || typeof symbol == 'undefined') {
                symbol = lex();
            }
            action = table[state] && table[state][symbol];
        }
                    if (typeof action === 'undefined' || !action.length || !action[0]) {
                var errStr = '';
                expected = [];
                for (p in table[state]) {
                    if (this.terminals_[p] && p > TERROR) {
                        expected.push('\'' + this.terminals_[p] + '\'');
                    }
                }
                if (this.lexer.showPosition) {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\n' + this.lexer.showPosition() + '\nExpecting ' + expected.join(', ') + ', got \'' + (this.terminals_[symbol] || symbol) + '\'';
                } else {
                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\'' + (this.terminals_[symbol] || symbol) + '\'');
                }
                this.parseError(errStr, {
                    text: this.lexer.match,
                    token: this.terminals_[symbol] || symbol,
                    line: this.lexer.yylineno,
                    loc: yyloc,
                    expected: expected
                });
            }
        if (action[0] instanceof Array && action.length > 1) {
            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);
        }
        switch (action[0]) {
        case 1:
            stack.push(symbol);
            vstack.push(this.lexer.yytext);
            lstack.push(this.lexer.yylloc);
            stack.push(action[1]);
            symbol = null;
            if (!preErrorSymbol) {
                yyleng = this.lexer.yyleng;
                yytext = this.lexer.yytext;
                yylineno = this.lexer.yylineno;
                yyloc = this.lexer.yylloc;
                if (recovering > 0) {
                    recovering--;
                }
            } else {
                symbol = preErrorSymbol;
                preErrorSymbol = null;
            }
            break;
        case 2:
            len = this.productions_[action[1]][1];
            yyval.$ = vstack[vstack.length - len];
            yyval._$ = {
                first_line: lstack[lstack.length - (len || 1)].first_line,
                last_line: lstack[lstack.length - 1].last_line,
                first_column: lstack[lstack.length - (len || 1)].first_column,
                last_column: lstack[lstack.length - 1].last_column
            };
            if (ranges) {
                yyval._$.range = [
                    lstack[lstack.length - (len || 1)].range[0],
                    lstack[lstack.length - 1].range[1]
                ];
            }
            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);
            if (typeof r !== 'undefined') {
                return r;
            }
            if (len) {
                stack = stack.slice(0, -1 * len * 2);
                vstack = vstack.slice(0, -1 * len);
                lstack = lstack.slice(0, -1 * len);
            }
            stack.push(this.productions_[action[1]][0]);
            vstack.push(yyval.$);
            lstack.push(yyval._$);
            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];
            stack.push(newState);
            break;
        case 3:
            return true;
        }
    }
    return true;
}};

function Parser () {
  this.yy = {};
}
Parser.prototype = parser;parser.Parser = Parser;
return new Parser;
})();


if (typeof require !== 'undefined' && typeof exports !== 'undefined') {
exports.parser = parser;
exports.Parser = parser.Parser;
exports.parse = function () { return parser.parse.apply(parser, arguments); };
exports.main = function commonjsMain(args) {
    if (!args[1]) {
        console.log('Usage: '+args[0]+' FILE');
        process.exit(1);
    }
    var source = require('fs').readFileSync(require('path').normalize(args[1]), "utf8");
    return exports.parser.parse(source);
};
if (typeof module !== 'undefined' && require.main === module) {
  exports.main(process.argv.slice(1));
}
}